// 1
db.E01_CLIENTE.find(
{ nombre: "Wanda", apellido: "Baker" },
{ _id: 0, "telefonos.codigo_area": 1, "telefonos.nro_telefono": 1, "nro_cliente": 1 }
)


// 2
db.E01_CLIENTE.find({ "_id": { $in: db.E01_FACTURA.distinct("id_cliente") } })


// 3
db.E01_CLIENTE.find({ "_id": { $nin: db.E01_FACTURA.distinct("id_cliente") } })


// 4
db.E01_PRODUCTO.find({ "_id": { $in: db.E01_FACTURA.distinct("detalle_factura.id_prodcuto") } })


// 5
db.E01_CLIENTE.find({},{
            "_id": 1,
            "nro_cliente": 1,
            "nombre": 1,
            "apellido": 1,
            "direccion": 1,
            "activo": 1,
            "telefonos": 1
        })


// 6
db.E01_CLIENTE.aggregate([
    {
        $lookup: {
            from: "E01_FACTURA",
            localField: "_id",
            foreignField: "id_cliente",
            as: "facturas"
        }
    },
    {
        $project: {
            "_id": 1,
            "nro_cliente": 1,
            "nombre": 1,
            "apellido": 1,
            "direccion": 1,
            "activo": 1,
            "telefonos": 1,
            "cantidad_facturas": { $size: "$facturas" }
        }
    }
])


// 7
db.E01_FACTURA.aggregate([
    {
        $lookup: {
            from: "E01_CLIENTE",
            localField: "id_cliente",
            foreignField: "_id",
            as: "cliente"
        }
    },
    {
        $match: {
            "cliente.nombre": "Pandora",
            "cliente.apellido": "Tate"
        }
    }
])

// 8
db.E01_FACTURA.aggregate([
    {
        $lookup: {
            from: "E01_PRODUCTO",
            localField: "detalle_factura.id_producto",
            foreignField: "_id",
            as: "productos"
        }
    },
    {
        $match: {
            "productos.marca": "In Faucibus Inc."
        }
    }
])

// 9
db.E01_CLIENTE.aggregate([
    {
        $unwind: "$telefonos"
    },
    {
        $project: {
            "_id": 1,
            "nro_cliente": 1,
            "nombre": 1,
            "apellido": 1,
            "direccion": 1,
            "activo": 1,
            "telefono": "$telefonos"
        }
    }
])

// 10
db.E01_CLIENTE.aggregate([
    {
        $lookup: {
            from: "E01_FACTURA",
            localField: "_id",
            foreignField: "id_cliente",
            as: "facturas"
        }
    },
    {
        $unwind: {
            path: "$facturas",
            preserveNullAndEmptyArrays: true
        }
    },
    {
        $group: {
            _id: "$_id",
            nombre: { $first: "$nombre" },
            apellido: { $first: "$apellido" },
            total_gastado_con_iva: {
                $sum: { $ifNull: ["$facturas.total_con_iva", 0] }
            }
        }
    },
    {
        $project: {
            _id: 0,
            nombre: 1,
            apellido: 1,
            total_gastado_con_iva: 1
        }
    }
])


db.createView("vista_facturas_ordenadas_por_fecha", "E01_FACTURA", [
  {
    $sort: { fecha: 1 }
  }
]);



db.createView("vista_productos_no_facturados", "E01_PRODUCTO", [
  {
    $lookup: {
      from: "E01_FACTURA",
      localField: "_id",
      foreignField: "detalle_factura.id_producto",
      as: "facturas"
    }
  },
  {
    $match: {
      facturas: { $eq: [] } // Filtra los productos que no tienen facturas asociadas
    }
  }
]);
